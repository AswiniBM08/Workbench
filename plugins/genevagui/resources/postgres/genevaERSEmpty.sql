--****************************************************************
--
--     Copyright Contributors to the GenevaERS Project.
-- SPDX-License-Identifier: Apache-2.0
--
--***********************************************************************
--*                                                                           
--*   Licensed under the Apache License, Version 2.0 (the "License");         
--*   you may not use this file except in compliance with the License.        
--*   You may obtain a copy of the License at                                 
--*                                                                           
--*     http://www.apache.org/licenses/LICENSE-2.0                            
--*                                                                           
--*   Unless required by applicable law or agreed to in writing, software     
--*   distributed under the License is distributed on an "AS IS" BASIS,       
--*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express 
--*   or implied.
--*   See the License for the specific language governing permissions and     
--*   limitations under the License.                                          
--***********************************************************************

--
-- PostgreSQL database dump
--

-- Dumped from database version 12.4
-- Dumped by pg_dump version 12.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
Set search_path to :schemaV;


--
-- Name: :schemaV; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA :schemaV;


ALTER SCHEMA :schemaV OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: controlrec; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.controlrec (
    environid integer NOT NULL,
    controlrecid integer NOT NULL,
    name character varying(48) NOT NULL,
    firstmonth integer,
    lowvalue integer,
    highvalue integer,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.controlrec OWNER TO postgres;

--
-- Name: CONTROLREC_controlrecid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.controlrec ALTER COLUMN controlrecid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.controlrec_controlrecid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: code; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.code (
    srcid character(10) NOT NULL,
    keyid character(5) NOT NULL,
    generalid integer,
    description character varying(256) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.code OWNER TO postgres;

--
-- Name: environ; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.environ (
    environid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.environ OWNER TO postgres;

--
-- Name: environ_environid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.environ ALTER COLUMN environid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.environ_environid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: exit; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.exit (
    environid integer NOT NULL,
    exitid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    moduleid character varying(48) DEFAULT NULL::character varying,
    exittypecd character(5) NOT NULL,
    programtypecd character(5) DEFAULT NULL::bpchar,
    optimizeind smallint,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.exit OWNER TO postgres;

--
-- Name: exit_exitid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.exit ALTER COLUMN exitid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.exit_exitid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: group; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV."group" (
    groupid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV."group" OWNER TO postgres;

--
-- Name: group_groupid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV."group" ALTER COLUMN groupid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.group_groupid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: lfpfassoc; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lfpfassoc (
    environid integer NOT NULL,
    lfpfassocid integer NOT NULL,
    phyfileid integer NOT NULL,
    partseqnbr integer NOT NULL,
    logfileid integer NOT NULL,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lfpfassoc OWNER TO postgres;

--
-- Name: lfpfassoc_lfpfassocid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.lfpfassoc ALTER COLUMN lfpfassocid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.lfpfassoc_lfpfassocid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: logfile; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.logfile (
    environid integer NOT NULL,
    logfileid integer NOT NULL,
    name character varying(48) NOT NULL,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.logfile OWNER TO postgres;

--
-- Name: logfile_logfileid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.logfile ALTER COLUMN logfileid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.logfile_logfileid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: logrec; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.logrec (
    environid integer NOT NULL,
    logrecid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    lrtypecd character(5) DEFAULT NULL::bpchar,
    lrstatuscd character(5) DEFAULT NULL::bpchar,
    lookupexitid integer,
    lookupexitstartup character varying(48) DEFAULT NULL::character varying,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying,
    lastacttimestamp timestamp without time zone,
    lastactuserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.logrec OWNER TO postgres;

--
-- Name: logrec_logrecid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.logrec ALTER COLUMN logrecid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.logrec_logrecid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: lookup; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lookup (
    environid integer NOT NULL,
    lookupid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    srclrid integer,
    destlrlfassocid integer,
    validind smallint,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying,
    lastacttimestamp timestamp without time zone,
    lastactuserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lookup OWNER TO postgres;

--
-- Name: lookup_lookupid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.lookup ALTER COLUMN lookupid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.lookup_lookupid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: lookupsrckey; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lookupsrckey (
    environid integer NOT NULL,
    lookupstepid integer NOT NULL,
    keyseqnbr integer NOT NULL,
    fldtype integer,
    lrfieldid integer,
    lrlfassocid integer,
    lookupid integer,
    valuefmtcd character(5) DEFAULT NULL::bpchar,
    signed smallint,
    valuelen integer,
    decimalcnt integer,
    fldcontentcd character(5) DEFAULT NULL::bpchar,
    rounding integer,
    justifycd character(5) DEFAULT NULL::bpchar,
    mask character varying(48) DEFAULT NULL::character varying,
    symbolicname character varying(256) DEFAULT NULL::character varying,
    value character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lookupsrckey OWNER TO postgres;

--
-- Name: lookupstep; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lookupstep (
    environid integer NOT NULL,
    lookupstepid integer NOT NULL,
    lookupid integer NOT NULL,
    stepseqnbr integer,
    srclrid integer,
    lrlfassocid integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lookupstep OWNER TO postgres;

--
-- Name: lookupstep_lookupstepid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.lookupstep ALTER COLUMN lookupstepid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.lookupstep_lookupstepid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: lrfield; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lrfield (
    environid integer NOT NULL,
    lrfieldid integer NOT NULL,
    logrecid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    dbmscolname character varying(48) DEFAULT NULL::character varying,
    fixedstartpos integer,
    ordinalpos integer,
    ordinaloffset integer,
    redefine integer,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lrfield OWNER TO postgres;

--CREATE SEQUENCE field_id
--START 1
--INCREMENT 1
--MINVALUE 1
--OWNED BY :schemaV.lrfield.:schemaV.lrfield;
CREATE SEQUENCE :schemaV."lrfield_id"
    INCREMENT 1
    START 1
    MINVALUE 1
    NO MAXVALUE
    CACHE 1;

ALTER SEQUENCE :schemaV."lrfield_id"
    OWNER TO postgres;
--
-- Name: lrfieldattr; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lrfieldattr (
    environid integer NOT NULL,
    lrfieldid integer NOT NULL,
    fldfmtcd character(5) DEFAULT NULL::bpchar,
    signedind smallint,
    maxlen integer,
    decimalcnt integer,
    rounding integer,
    fldcontentcd character(5) DEFAULT NULL::bpchar,
    justifycd character(5) DEFAULT NULL::bpchar,
    hdrjustifycd character(5) DEFAULT NULL::bpchar,
    hdrline1 character varying(256) DEFAULT NULL::character varying,
    hdrline2 character varying(256) DEFAULT NULL::character varying,
    hdrline3 character varying(256) DEFAULT NULL::character varying,
    subtlabel character varying(48) DEFAULT NULL::character varying,
    sortkeylabel character varying(48) DEFAULT NULL::character varying,
    inputmask character varying(48) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lrfieldattr OWNER TO postgres;

--
-- Name: lrindex; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lrindex (
    environid integer NOT NULL,
    lrindexid integer NOT NULL,
    logrecid integer NOT NULL,
    effdatestartfldid integer,
    effdateendfldid integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lrindex OWNER TO postgres;

--
-- Name: lrindex_lrindexid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.lrindex ALTER COLUMN lrindexid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.lrindex_lrindexid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: lrindexfld; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lrindexfld (
    environid integer NOT NULL,
    lrindexfldid integer NOT NULL,
    lrindexid integer NOT NULL,
    fldseqnbr integer,
    lrfieldid integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lrindexfld OWNER TO postgres;

--
-- Name: lrindexfld_lrindexfldid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.lrindexfld ALTER COLUMN lrindexfldid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.lrindexfld_lrindexfldid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: lrlfassoc; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.lrlfassoc (
    environid integer NOT NULL,
    lrlfassocid integer NOT NULL,
    logfileid integer NOT NULL,
    logrecid integer NOT NULL,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.lrlfassoc OWNER TO postgres;

--
-- Name: lrlfassoc_lrlfassocid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.lrlfassoc ALTER COLUMN lrlfassocid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.lrlfassoc_lrlfassocid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: migaudit; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.migaudit (
    auditid integer NOT NULL,
    srcenvironid integer NOT NULL,
    destenvironid integer NOT NULL,
    entitytype character varying(28) NOT NULL,
    entityid integer NOT NULL,
    entityname character varying(256) DEFAULT NULL::character varying,
    migrationdate timestamp without time zone,
    migratedby character(8) DEFAULT NULL::bpchar,
    messagetext character varying(3000) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.migaudit OWNER TO postgres;

--
-- Name: migaudit_auditid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.migaudit ALTER COLUMN auditid ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME :schemaV.migaudit_auditid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483487
    CACHE 20
);


--
-- Name: phyfile; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.phyfile (
    environid integer NOT NULL,
    phyfileid integer NOT NULL,
    name character varying(48) NOT NULL,
    filetypecd character(5) NOT NULL,
    diskfiletypecd character(5) DEFAULT NULL::bpchar,
    accessmethodcd character(5) DEFAULT NULL::bpchar,
    readexitid integer,
    readexitstartup character varying(48) DEFAULT NULL::character varying,
    ddnameinput character(8) DEFAULT NULL::bpchar,
    dsn character varying(48) DEFAULT NULL::character varying,
    minreclen integer,
    maxreclen integer,
    ddnameoutput character(8) DEFAULT NULL::bpchar,
    recfm character(5) DEFAULT NULL::bpchar,
    lrecl integer,
    dbmssubsys character varying(48) DEFAULT NULL::character varying,
    dbmssql character varying(1280) DEFAULT NULL::character varying,
    dbmstable character varying(48) DEFAULT NULL::character varying,
    dbmsrowfmtcd character(5) DEFAULT NULL::bpchar,
    dbmsinclnullsind smallint,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.phyfile OWNER TO postgres;

--
-- Name: phyfile_phyfileid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.phyfile ALTER COLUMN phyfileid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.phyfile_phyfileid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: secenviron; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.secenviron (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    envrole character varying(20),
    exitrights integer,
    pfrights integer,
    lfrights integer,
    lrrights integer,
    lprights integer,
    vwrights integer,
    vfrights integer,
    mgrights integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying,
    CONSTRAINT secenviron_envrole_check CHECK (((envrole)::text = ANY ((ARRAY['ADMIN'::character varying, 'DEVELOPER'::character varying, 'GUEST'::character varying])::text[])))
);


ALTER TABLE :schemaV.secenviron OWNER TO postgres;

--
-- Name: secexit; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.secexit (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    exitid integer NOT NULL,
    rights integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.secexit OWNER TO postgres;

--
-- Name: seclogfile; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.seclogfile (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    logfileid integer NOT NULL,
    rights integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.seclogfile OWNER TO postgres;

--
-- Name: seclogrec; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.seclogrec (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    logrecid integer NOT NULL,
    rights integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.seclogrec OWNER TO postgres;

--
-- Name: seclookup; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.seclookup (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    lookupid integer NOT NULL,
    rights integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.seclookup OWNER TO postgres;

--
-- Name: secphyfile; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.secphyfile (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    phyfileid integer NOT NULL,
    rights integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.secphyfile OWNER TO postgres;

--
-- Name: secuser; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.secuser (
    groupid integer NOT NULL,
    userid character varying(48) NOT NULL,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.secuser OWNER TO postgres;

--
-- Name: secview; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.secview (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    viewid integer NOT NULL,
    rights integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.secview OWNER TO postgres;

--
-- Name: secviewfolder; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.secviewfolder (
    environid integer NOT NULL,
    groupid integer NOT NULL,
    viewfolderid integer NOT NULL,
    rights integer NOT NULL,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.secviewfolder OWNER TO postgres;

--
-- Name: user; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV."user" (
    userid character varying(48) NOT NULL,
    password character varying(150) DEFAULT NULL::character varying,
    firstname character varying(48) DEFAULT NULL::character varying,
    middleinit character varying(1) DEFAULT NULL::character varying,
    lastname character varying(48) DEFAULT NULL::character varying,
    email character varying(48) DEFAULT NULL::character varying,
    defenvironid integer,
    deffolderid integer,
    defgroupid integer,
    sysadmin smallint,
    loglevel integer,
    maxcompileerrors integer,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV."user" OWNER TO postgres;

--
-- Name: vfvassoc; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.vfvassoc (
    environid integer NOT NULL,
    vfvassocid integer NOT NULL,
    viewfolderid integer NOT NULL,
    viewid integer NOT NULL,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.vfvassoc OWNER TO postgres;

--
-- Name: vfvassoc_vfvassocid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.vfvassoc ALTER COLUMN vfvassocid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.vfvassoc_vfvassocid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: view; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.view (
    environid integer NOT NULL,
    viewid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    effdate timestamp without time zone,
    viewstatuscd character(5) DEFAULT NULL::bpchar,
    viewtypecd character(5) DEFAULT NULL::bpchar,
    extractfilepartnbr integer,
    outputmediacd character(5) DEFAULT NULL::bpchar,
    outputlrid integer,
    lfpfassocid integer,
    pagesize integer,
    linesize integer,
    zerosuppressind smallint,
    extractmaxreccnt integer,
    extractsummaryind smallint,
    extractsummarybuf integer,
    outputmaxreccnt integer,
    controlrecid integer NOT NULL,
    writeexitid integer,
    writeexitstartup character varying(32) DEFAULT NULL::character varying,
    formatexitid integer,
    formatexitstartup character varying(32) DEFAULT NULL::character varying,
    fileflddelimcd character(5) DEFAULT NULL::bpchar,
    filestrdelimcd character(5) DEFAULT NULL::bpchar,
    fillerror character varying(64) DEFAULT NULL::character varying,
    filltruncation character varying(64) DEFAULT NULL::character varying,
    delimheaderrowind smallint,
    formatfiltlogic text,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying,
    compiler character varying(30),
    lastacttimestamp timestamp without time zone,
    lastactuserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.view OWNER TO postgres;

--
-- Name: view_viewid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.view ALTER COLUMN viewid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.view_viewid_seq
    START WITH 1001
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: viewcolumn; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.viewcolumn (
    environid integer NOT NULL,
    viewcolumnid integer NOT NULL,
    viewid integer NOT NULL,
    columnnumber integer,
    fldfmtcd character(5) DEFAULT NULL::bpchar,
    signedind smallint,
    startposition integer,
    maxlen integer,
    ordinalposition integer,
    decimalcnt integer,
    rounding integer,
    fldcontentcd character(5) DEFAULT NULL::bpchar,
    justifycd character(5) DEFAULT NULL::bpchar,
    defaultval character varying(256) DEFAULT NULL::character varying,
    visible smallint,
    subtotaltypecd character(5) DEFAULT NULL::bpchar,
    spacesbeforecolumn integer,
    extractareacd character(5) DEFAULT NULL::bpchar,
    extrareaposition integer,
    subtlabel character varying(48) DEFAULT NULL::character varying,
    rptmask character varying(48) DEFAULT NULL::character varying,
    hdrjustifycd character(5) DEFAULT NULL::bpchar,
    hdrline1 character varying(256) DEFAULT NULL::character varying,
    hdrline2 character varying(256) DEFAULT NULL::character varying,
    hdrline3 character varying(256) DEFAULT NULL::character varying,
    formatcalclogic text,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.viewcolumn OWNER TO postgres;

--
-- Name: viewcolumn_viewcolumnid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.viewcolumn ALTER COLUMN viewcolumnid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.viewcolumn_viewcolumnid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: viewcolumnsource; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.viewcolumnsource (
    environid integer NOT NULL,
    viewcolumnsourceid integer NOT NULL,
    viewcolumnid integer NOT NULL,
    viewsourceid integer NOT NULL,
    viewid integer,
    sourcetypeid integer NOT NULL,
    constval character varying(256) DEFAULT NULL::character varying,
    lookupid integer,
    lrfieldid integer,
    effdatevalue character varying(24) DEFAULT NULL::character varying,
    effdatetype character(5) DEFAULT NULL::bpchar,
    effdatelrfieldid integer,
    sorttitlelookupid integer,
    sorttitlelrfieldid integer,
    extractcalclogic text,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.viewcolumnsource OWNER TO postgres;

--
-- Name: viewcolumnsource_viewcolumnsourceid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.viewcolumnsource ALTER COLUMN viewcolumnsourceid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.viewcolumnsource_viewcolumnsourceid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: viewfolder; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.viewfolder (
    environid integer NOT NULL,
    viewfolderid integer NOT NULL,
    name character varying(48) DEFAULT NULL::character varying,
    comments character varying(256) DEFAULT NULL::character varying,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.viewfolder OWNER TO postgres;

--
-- Name: viewfolder_viewfolderid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.viewfolder ALTER COLUMN viewfolderid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.viewfolder_viewfolderid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: viewheaderfooter; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.viewheaderfooter (
    environid integer NOT NULL,
    headerfooterid integer NOT NULL,
    viewid integer,
    stdfunccd character(5) DEFAULT NULL::bpchar,
    justifycd character(5) DEFAULT NULL::bpchar,
    rownumber integer,
    colnumber integer,
    length integer,
    itemtext character varying(256) DEFAULT NULL::character varying,
    headerfooterind smallint,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.viewheaderfooter OWNER TO postgres;

--
-- Name: viewheaderfooter_headerfooterid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.viewheaderfooter ALTER COLUMN headerfooterid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.viewheaderfooter_headerfooterid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: viewlogicdepend; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.viewlogicdepend (
    environid integer NOT NULL,
    viewid integer NOT NULL,
    logictypecd integer NOT NULL,
    parentid integer NOT NULL,
    dependid integer NOT NULL,
    lookupid integer,
    lrfieldid integer,
    exitid integer,
    lfpfassocid integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.viewlogicdepend OWNER TO postgres;

--
-- Name: viewsortkey; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.viewsortkey (
    environid integer NOT NULL,
    viewsortkeyid integer NOT NULL,
    viewid integer NOT NULL,
    viewcolumnid integer,
    keyseqnbr integer,
    sortseqcd character(5) DEFAULT NULL::bpchar,
    sortbrkind smallint,
    pagebrkind smallint,
    sortkeydisplaycd character(5) DEFAULT NULL::bpchar,
    sortkeylabel character varying(48) DEFAULT NULL::character varying,
    skfldfmtcd character(5) DEFAULT NULL::bpchar,
    sksigned smallint,
    skstartpos integer,
    skfldlen integer,
    skdecimalcnt integer,
    skfldcontentcd character(5) DEFAULT NULL::bpchar,
    sorttitlelrfieldid integer,
    sorttitlelength integer,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.viewsortkey OWNER TO postgres;

--
-- Name: viewsortkey_viewsortkeyid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.viewsortkey ALTER COLUMN viewsortkeyid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.viewsortkey_viewsortkeyid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: viewsource; Type: TABLE; Schema: :schemaV; Owner: postgres
--

CREATE TABLE :schemaV.viewsource (
    environid integer NOT NULL,
    viewsourceid integer NOT NULL,
    viewid integer NOT NULL,
    srcseqnbr integer,
    inlrlfassocid integer,
    extractfiltlogic text,
    outlfpfassocid integer,
    writeexitid integer,
    writeexitparm character varying(32),
    extractoutputind smallint,
    extractoutputlogic text,
    createdtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createduserid character varying(48) DEFAULT NULL::character varying,
    lastmodtimestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    lastmoduserid character varying(48) DEFAULT NULL::character varying
);


ALTER TABLE :schemaV.viewsource OWNER TO postgres;

--
-- Name: viewsource_viewsourceid_seq; Type: SEQUENCE; Schema: :schemaV; Owner: postgres
--

ALTER TABLE :schemaV.viewsource ALTER COLUMN viewsourceid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME :schemaV.viewsource_viewsourceid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



--
-- Name: CONTROLREC_controlrecid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('controlrec_controlrecid_seq', 1, false);


--
-- Name: environ_environid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('environ_environid_seq', 1, false);


--
-- Name: exit_exitid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('exit_exitid_seq', 1, false);


--
-- Name: group_groupid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('group_groupid_seq', 1, false);


--
-- Name: lfpfassoc_lfpfassocid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('lfpfassoc_lfpfassocid_seq', 1, false);


--
-- Name: logfile_logfileid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('logfile_logfileid_seq', 1, false);


--
-- Name: logrec_logrecid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('logrec_logrecid_seq', 1, false);


--
-- Name: lookup_lookupid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('lookup_lookupid_seq', 1, false);


--
-- Name: lookupstep_lookupstepid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('lookupstep_lookupstepid_seq', 1, false);


--
-- Name: lrindex_lrindexid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('lrindex_lrindexid_seq', 1, false);


--
-- Name: lrindexfld_lrindexfldid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('lrindexfld_lrindexfldid_seq', 1, false);


--
-- Name: lrlfassoc_lrlfassocid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('lrlfassoc_lrlfassocid_seq', 1, false);


--
-- Name: migaudit_auditid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('migaudit_auditid_seq', 1, false);


--
-- Name: phyfile_phyfileid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('phyfile_phyfileid_seq', 1, false);


--
-- Name: vfvassoc_vfvassocid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('vfvassoc_vfvassocid_seq', 1, false);


--
-- Name: view_viewid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('view_viewid_seq', 1001, false);


--
-- Name: viewcolumn_viewcolumnid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('viewcolumn_viewcolumnid_seq', 1, false);


--
-- Name: viewcolumnsource_viewcolumnsourceid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('viewcolumnsource_viewcolumnsourceid_seq', 1, false);


--
-- Name: viewfolder_viewfolderid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('viewfolder_viewfolderid_seq', 1, false);


--
-- Name: viewheaderfooter_headerfooterid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('viewheaderfooter_headerfooterid_seq', 1, false);


--
-- Name: viewsortkey_viewsortkeyid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('viewsortkey_viewsortkeyid_seq', 1, false);


--
-- Name: viewsource_viewsourceid_seq; Type: SEQUENCE SET; Schema: :schemaV; Owner: postgres
--

SELECT pg_catalog.setval('viewsource_viewsourceid_seq', 1, false);


--
-- Name: code pk__code; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.code
    ADD CONSTRAINT pk__code PRIMARY KEY (srcid, keyid);


--
-- Name: controlrec pk__controlrec; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.controlrec
    ADD CONSTRAINT pk__controlrec PRIMARY KEY (environid, controlrecid);


--
-- Name: environ pk__environ; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.environ
    ADD CONSTRAINT pk__environ PRIMARY KEY (environid);

--
-- Name: exit pk__exit; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.exit
    ADD CONSTRAINT pk__exit PRIMARY KEY (environid, exitid);


--
-- Name: group pk__group; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV."group"
    ADD CONSTRAINT pk__group PRIMARY KEY (groupid);


--
-- Name: lfpfassoc pk__lfpfassoc; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lfpfassoc
    ADD CONSTRAINT pk__lfpfassoc PRIMARY KEY (environid, lfpfassocid);


--
-- Name: logfile pk__logfile; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.logfile
    ADD CONSTRAINT pk__logfile PRIMARY KEY (environid, logfileid);


--
-- Name: logrec pk__logrec; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.logrec
    ADD CONSTRAINT pk__logrec PRIMARY KEY (environid, logrecid);


--
-- Name: lookup pk__lookup; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookup
    ADD CONSTRAINT pk__lookup PRIMARY KEY (environid, lookupid);


--
-- Name: lookupsrckey pk__lookupsrckey; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupsrckey
    ADD CONSTRAINT pk__lookupsrckey PRIMARY KEY (environid, lookupstepid, keyseqnbr);


--
-- Name: lookupstep pk__lookupstep; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupstep
    ADD CONSTRAINT pk__lookupstep PRIMARY KEY (environid, lookupstepid);


--
-- Name: lrfield pk__lrfield; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrfield
    ADD CONSTRAINT pk__lrfield PRIMARY KEY (environid, lrfieldid);


--
-- Name: lrfieldattr pk__lrfieldattr; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrfieldattr
    ADD CONSTRAINT pk__lrfieldattr PRIMARY KEY (environid, lrfieldid);


--
-- Name: lrindex pk__lrindex; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindex
    ADD CONSTRAINT pk__lrindex PRIMARY KEY (environid, lrindexid);


--
-- Name: lrindexfld pk__lrindexfld; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindexfld
    ADD CONSTRAINT pk__lrindexfld PRIMARY KEY (environid, lrindexfldid);


--
-- Name: lrlfassoc pk__lrlfassoc; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrlfassoc
    ADD CONSTRAINT pk__lrlfassoc PRIMARY KEY (environid, lrlfassocid);


--
-- Name: migaudit pk__migaudit; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.migaudit
    ADD CONSTRAINT pk__migaudit PRIMARY KEY (auditid);


--
-- Name: phyfile pk__phyfile; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.phyfile
    ADD CONSTRAINT pk__phyfile PRIMARY KEY (environid, phyfileid);


--
-- Name: secenviron pk__secenviron; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secenviron
    ADD CONSTRAINT pk__secenviron PRIMARY KEY (environid, groupid);


--
-- Name: secexit pk__secexit; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secexit
    ADD CONSTRAINT pk__secexit PRIMARY KEY (environid, groupid, exitid);


--
-- Name: seclogrec pk__seclogrec; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclogrec
    ADD CONSTRAINT pk__seclogrec PRIMARY KEY (environid, groupid, logrecid);


--
-- Name: seclookup pk__seclookup; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclookup
    ADD CONSTRAINT pk__seclookup PRIMARY KEY (environid, groupid, lookupid);


--
-- Name: secphyfile pk__secphyfile; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secphyfile
    ADD CONSTRAINT pk__secphyfile PRIMARY KEY (environid, groupid, phyfileid);


--
-- Name: secuser pk__secuser; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secuser
    ADD CONSTRAINT pk__secuser PRIMARY KEY (userid, groupid);


--
-- Name: secview pk__secview; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secview
    ADD CONSTRAINT pk__secview PRIMARY KEY (environid, groupid, viewid);


--
-- Name: secviewfolder pk__secviewfolder; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secviewfolder
    ADD CONSTRAINT pk__secviewfolder PRIMARY KEY (environid, groupid, viewfolderid);


--
-- Name: user pk__user; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV."user"
    ADD CONSTRAINT pk__user PRIMARY KEY (userid);


--
-- Name: vfvassoc pk__vfvassoc; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.vfvassoc
    ADD CONSTRAINT pk__vfvassoc PRIMARY KEY (environid, vfvassocid);


--
-- Name: view pk__view; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.view
    ADD CONSTRAINT pk__view PRIMARY KEY (environid, viewid);


--
-- Name: viewcolumn pk__viewcolumn; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumn
    ADD CONSTRAINT pk__viewcolumn PRIMARY KEY (environid, viewcolumnid);


--
-- Name: viewcolumnsource pk__viewcolumnsource; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT pk__viewcolumnsource PRIMARY KEY (environid, viewcolumnsourceid);


--
-- Name: viewfolder pk__viewfolder; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewfolder
    ADD CONSTRAINT pk__viewfolder PRIMARY KEY (environid, viewfolderid);


--
-- Name: viewheaderfooter pk__viewheaderfooter; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewheaderfooter
    ADD CONSTRAINT pk__viewheaderfooter PRIMARY KEY (environid, headerfooterid);


--
-- Name: viewlogicdepend pk__viewlogicdepend; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewlogicdepend
    ADD CONSTRAINT pk__viewlogicdepend PRIMARY KEY (environid, viewid, logictypecd, parentid, dependid);


--
-- Name: viewsortkey pk__viewsortkey; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsortkey
    ADD CONSTRAINT pk__viewsortkey PRIMARY KEY (environid, viewsortkeyid);


--
-- Name: viewsource pk__viewsource; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsource
    ADD CONSTRAINT pk__viewsource PRIMARY KEY (environid, viewsourceid);


--
-- Name: seclogfile pk__x_secgroupsfil; Type: CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclogfile
    ADD CONSTRAINT pk__x_secgroupsfil PRIMARY KEY (environid, groupid, logfileid);


--
-- Name: idx_code; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_code ON :schemaV.code USING btree (srcid, keyid);


--
-- Name: idx_controlrec; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_controlrec ON :schemaV.controlrec USING btree (environid, controlrecid);


--
-- Name: idx_environ; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_environ ON :schemaV.environ USING btree (environid);


--
-- Name: idx_exit; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_exit ON :schemaV.exit USING btree (environid, exitid);


--
-- Name: idx_group; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_group ON :schemaV."group" USING btree (groupid);


--
-- Name: idx_lfpfassoc; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lfpfassoc ON :schemaV.lfpfassoc USING btree (environid, lfpfassocid);


--
-- Name: idx_lfpfassoc1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lfpfassoc1 ON :schemaV.lfpfassoc USING btree (environid, phyfileid, partseqnbr, logfileid);


--
-- Name: idx_logfile; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_logfile ON :schemaV.logfile USING btree (environid, logfileid);


--
-- Name: idx_logfile1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_logfile1 ON :schemaV.logfile USING btree (environid, name);


--
-- Name: idx_logrec; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_logrec ON :schemaV.logrec USING btree (environid, logrecid);


--
-- Name: idx_logrec1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_logrec1 ON :schemaV.logrec USING btree (lrstatuscd);


--
-- Name: idx_lookup; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lookup ON :schemaV.lookup USING btree (environid, lookupid);


--
-- Name: idx_lookup1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lookup1 ON :schemaV.lookup USING btree (environid, name);


--
-- Name: idx_lookupsrckey; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lookupsrckey ON :schemaV.lookupsrckey USING btree (environid, lookupstepid, keyseqnbr);


--
-- Name: idx_lookupstep; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lookupstep ON :schemaV.lookupstep USING btree (environid, lookupstepid);


--
-- Name: idx_lrfield; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lrfield ON :schemaV.lrfield USING btree (environid, lrfieldid);


--
-- Name: idx_lrfield1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lrfield1 ON :schemaV.lrfield USING btree (environid, logrecid, lrfieldid);


--
-- Name: idx_lrfieldattr; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lrfieldattr ON :schemaV.lrfieldattr USING btree (environid, lrfieldid);


--
-- Name: idx_lrindex; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lrindex ON :schemaV.lrindex USING btree (environid, lrindexid);


--
-- Name: idx_lrindexfld; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lrindexfld ON :schemaV.lrindexfld USING btree (environid, lrindexfldid);


--
-- Name: idx_lrlfassoc; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_lrlfassoc ON :schemaV.lrlfassoc USING btree (environid, lrlfassocid);


--
-- Name: idx_lrlfassoc1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_lrlfassoc1 ON :schemaV.lrlfassoc USING btree (environid, logrecid);


--
-- Name: idx_migaudit; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_migaudit ON :schemaV.migaudit USING btree (auditid);


--
-- Name: idx_phyfile; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_phyfile ON :schemaV.phyfile USING btree (environid, phyfileid);


--
-- Name: idx_phyfile1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_phyfile1 ON :schemaV.phyfile USING btree (environid, name);


--
-- Name: idx_secenviron; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_secenviron ON :schemaV.secenviron USING btree (environid, groupid);


--
-- Name: idx_secexit; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_secexit ON :schemaV.secexit USING btree (environid, groupid, exitid);


--
-- Name: idx_seclogfile; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_seclogfile ON :schemaV.seclogfile USING btree (environid, groupid, logfileid);


--
-- Name: idx_seclogrec; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_seclogrec ON :schemaV.seclogrec USING btree (environid, groupid, logrecid);


--
-- Name: idx_seclookup; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_seclookup ON :schemaV.seclookup USING btree (environid, groupid, lookupid);


--
-- Name: idx_secphyfile; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_secphyfile ON :schemaV.secphyfile USING btree (environid, groupid, phyfileid);


--
-- Name: idx_secuser; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_secuser ON :schemaV.secuser USING btree (userid, groupid);


--
-- Name: idx_secview; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_secview ON :schemaV.secview USING btree (environid, groupid, viewid);


--
-- Name: idx_secviewfolder; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_secviewfolder ON :schemaV.secviewfolder USING btree (environid, groupid, viewfolderid);


--
-- Name: idx_user; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_user ON :schemaV."user" USING btree (userid);


--
-- Name: idx_vfvassoc; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_vfvassoc ON :schemaV.vfvassoc USING btree (environid, vfvassocid);


--
-- Name: idx_view; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_view ON :schemaV.view USING btree (environid, viewid);


--
-- Name: idx_viewcolumn; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_viewcolumn ON :schemaV.viewcolumn USING btree (environid, viewcolumnid);


--
-- Name: idx_viewcolumn1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_viewcolumn1 ON :schemaV.viewcolumn USING btree (environid, viewid);


--
-- Name: idx_viewcolumnsource; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_viewcolumnsource ON :schemaV.viewcolumnsource USING btree (environid, viewcolumnsourceid);


--
-- Name: idx_viewcolumnsource1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_viewcolumnsource1 ON :schemaV.viewcolumnsource USING btree (environid, viewid, viewcolumnid, lookupid, sorttitlelookupid);


--
-- Name: idx_viewcolumnsource2; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_viewcolumnsource2 ON :schemaV.viewcolumnsource USING btree (environid, viewcolumnid);


--
-- Name: idx_viewcolumnsource3; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_viewcolumnsource3 ON :schemaV.viewcolumnsource USING btree (environid, viewid);


--
-- Name: idx_viewfolder; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_viewfolder ON :schemaV.viewfolder USING btree (environid, viewfolderid);


--
-- Name: idx_viewheaderfooter; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_viewheaderfooter ON :schemaV.viewheaderfooter USING btree (environid, headerfooterid);


--
-- Name: idx_viewheaderfooter1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_viewheaderfooter1 ON :schemaV.viewheaderfooter USING btree (environid, viewid);


--
-- Name: idx_viewlogicdepend; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_viewlogicdepend ON :schemaV.viewlogicdepend USING btree (environid, viewid, logictypecd, parentid, dependid);


--
-- Name: idx_viewsortkey; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_viewsortkey ON :schemaV.viewsortkey USING btree (environid, viewsortkeyid);


--
-- Name: idx_viewsortkey1; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE INDEX idx_viewsortkey1 ON :schemaV.viewsortkey USING btree (environid, viewid);


--
-- Name: idx_viewsource; Type: INDEX; Schema: :schemaV; Owner: postgres
--

CREATE UNIQUE INDEX idx_viewsource ON :schemaV.viewsource USING btree (environid, viewsourceid);


--
-- Name: logfile fkfilet1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.logfile
    ADD CONSTRAINT fkfilet1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lfpfassoc fkfilpt1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lfpfassoc
    ADD CONSTRAINT fkfilpt1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lfpfassoc fkfilpt2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lfpfassoc
    ADD CONSTRAINT fkfilpt2 FOREIGN KEY (environid, phyfileid) REFERENCES :schemaV.phyfile(environid, phyfileid);


--
-- Name: lfpfassoc fkfilpt3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lfpfassoc
    ADD CONSTRAINT fkfilpt3 FOREIGN KEY (environid, logfileid) REFERENCES :schemaV.logfile(environid, logfileid);


--
-- Name: viewheaderfooter fkhdft1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewheaderfooter
    ADD CONSTRAINT fkhdft1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: viewheaderfooter fkhdft2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewheaderfooter
    ADD CONSTRAINT fkhdft2 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- Name: lookup fkjoin01; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookup
    ADD CONSTRAINT fkjoin01 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lookup fkjoin02; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookup
    ADD CONSTRAINT fkjoin02 FOREIGN KEY (environid, srclrid) REFERENCES :schemaV.logrec(environid, logrecid);


--
-- Name: lookup fkjoin03; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookup
    ADD CONSTRAINT fkjoin03 FOREIGN KEY (environid, destlrlfassocid) REFERENCES :schemaV.lrlfassoc(environid, lrlfassocid);


--
-- Name: lookupsrckey fkjoins1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupsrckey
    ADD CONSTRAINT fkjoins1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lookupsrckey fkjoins2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupsrckey
    ADD CONSTRAINT fkjoins2 FOREIGN KEY (environid, lookupid) REFERENCES :schemaV.lookup(environid, lookupid);


--
-- Name: lookupsrckey fkjoins3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupsrckey
    ADD CONSTRAINT fkjoins3 FOREIGN KEY (environid, lookupstepid) REFERENCES :schemaV.lookupstep(environid, lookupstepid);


--
-- Name: lookupsrckey fkjoins4; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupsrckey
    ADD CONSTRAINT fkjoins4 FOREIGN KEY (environid, lrlfassocid) REFERENCES :schemaV.lrlfassoc(environid, lrlfassocid);


--
-- Name: lookupsrckey fkjoins5; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupsrckey
    ADD CONSTRAINT fkjoins5 FOREIGN KEY (environid, lrfieldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);


--
-- Name: lookupstep fkjoint1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupstep
    ADD CONSTRAINT fkjoint1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lookupstep fkjoint2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupstep
    ADD CONSTRAINT fkjoint2 FOREIGN KEY (environid, lookupid) REFERENCES :schemaV.lookup(environid, lookupid);


--
-- Name: lookupstep fkjoint3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupstep
    ADD CONSTRAINT fkjoint3 FOREIGN KEY (environid, srclrid) REFERENCES :schemaV.logrec(environid, logrecid);


--
-- Name: lookupstep fkjoint4; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lookupstep
    ADD CONSTRAINT fkjoint4 FOREIGN KEY (environid, lrlfassocid) REFERENCES :schemaV.lrlfassoc(environid, lrlfassocid);


--
-- Name: lrlfassoc fklrfil1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrlfassoc
    ADD CONSTRAINT fklrfil1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lrlfassoc fklrfil2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrlfassoc
    ADD CONSTRAINT fklrfil2 FOREIGN KEY (environid, logrecid) REFERENCES :schemaV.logrec(environid, logrecid);


--
-- Name: lrlfassoc fklrfil3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrlfassoc
    ADD CONSTRAINT fklrfil3 FOREIGN KEY (environid, logfileid) REFERENCES :schemaV.logfile(environid, logfileid);


--
-- Name: lrfield fklrfld1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrfield
    ADD CONSTRAINT fklrfld1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lrfield fklrfld2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrfield
    ADD CONSTRAINT fklrfld2 FOREIGN KEY (environid, logrecid) REFERENCES :schemaV.logrec(environid, logrecid);


--
-- Name: lrindex fklrind1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindex
    ADD CONSTRAINT fklrind1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lrindexfld fklrind1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindexfld
    ADD CONSTRAINT fklrind1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lrindex fklrind2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindex
    ADD CONSTRAINT fklrind2 FOREIGN KEY (environid, logrecid) REFERENCES :schemaV.logrec(environid, logrecid);


--
-- Name: lrindexfld fklrind2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindexfld
    ADD CONSTRAINT fklrind2 FOREIGN KEY (environid, lrindexid) REFERENCES :schemaV.lrindex(environid, lrindexid);


--
-- Name: lrindex fklrind3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindex
    ADD CONSTRAINT fklrind3 FOREIGN KEY (environid, effdatestartfldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);


--
-- Name: lrindexfld fklrind3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindexfld
    ADD CONSTRAINT fklrind3 FOREIGN KEY (environid, lrfieldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);


--
-- Name: lrindex fklrind4; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrindex
    ADD CONSTRAINT fklrind4 FOREIGN KEY (environid, effdateendfldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);


--
-- Name: logrec fklrtbl1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.logrec
    ADD CONSTRAINT fklrtbl1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: logrec fklrtbl2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.logrec
    ADD CONSTRAINT fklrtbl2 FOREIGN KEY (environid, lookupexitid) REFERENCES :schemaV.exit(environid, exitid);


--
-- Name: exit fkpgmtb1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.exit
    ADD CONSTRAINT fkpgmtb1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: phyfile fkpttbl1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.phyfile
    ADD CONSTRAINT fkpttbl1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: phyfile fkpttbl2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.phyfile
    ADD CONSTRAINT fkpttbl2 FOREIGN KEY (environid, readexitid) REFERENCES :schemaV.exit(environid, exitid);


--
-- Name: secexit fksecge1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secexit
    ADD CONSTRAINT fksecge1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: secexit fksecge2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secexit
    ADD CONSTRAINT fksecge2 FOREIGN KEY (environid, exitid) REFERENCES :schemaV.exit(environid, exitid);


--
-- Name: seclogfile fksgrfi1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclogfile
    ADD CONSTRAINT fksgrfi1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: seclogfile fksgrfi2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclogfile
    ADD CONSTRAINT fksgrfi2 FOREIGN KEY (environid, logfileid) REFERENCES :schemaV.logfile(environid, logfileid);


--
-- Name: secviewfolder fksgrfl1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secviewfolder
    ADD CONSTRAINT fksgrfl1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: secviewfolder fksgrfl2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secviewfolder
    ADD CONSTRAINT fksgrfl2 FOREIGN KEY (environid, viewfolderid) REFERENCES :schemaV.viewfolder(environid, viewfolderid);


--
-- Name: seclogrec fksgrlr1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclogrec
    ADD CONSTRAINT fksgrlr1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: seclookup fksgrlr1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclookup
    ADD CONSTRAINT fksgrlr1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: secview fksgrlr1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secview
    ADD CONSTRAINT fksgrlr1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: seclogrec fksgrlr2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclogrec
    ADD CONSTRAINT fksgrlr2 FOREIGN KEY (environid, logrecid) REFERENCES :schemaV.logrec(environid, logrecid);


--
-- Name: seclookup fksgrlr2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.seclookup
    ADD CONSTRAINT fksgrlr2 FOREIGN KEY (environid, lookupid) REFERENCES :schemaV.lookup(environid, lookupid);


--
-- Name: secview fksgrlr2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secview
    ADD CONSTRAINT fksgrlr2 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- Name: secphyfile fksgrpt1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secphyfile
    ADD CONSTRAINT fksgrpt1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: secphyfile fksgrpt2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secphyfile
    ADD CONSTRAINT fksgrpt2 FOREIGN KEY (environid, phyfileid) REFERENCES :schemaV.phyfile(environid, phyfileid);


--
-- Name: secuser fksgrus1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secuser
    ADD CONSTRAINT fksgrus1 FOREIGN KEY (userid) REFERENCES :schemaV."user"(userid);


--
-- Name: secuser fksgrus2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secuser
    ADD CONSTRAINT fksgrus2 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: secenviron fksusrn1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secenviron
    ADD CONSTRAINT fksusrn1 FOREIGN KEY (groupid) REFERENCES :schemaV."group"(groupid);


--
-- Name: secenviron fksusrn2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.secenviron
    ADD CONSTRAINT fksusrn2 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: controlrec fkvcntr1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.controlrec
    ADD CONSTRAINT fkvcntr1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: viewfolder fkvfldr1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewfolder
    ADD CONSTRAINT fkvfldr1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: vfvassoc fkvfv1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.vfvassoc
    ADD CONSTRAINT fkvfv1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: vfvassoc fkvfv2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.vfvassoc
    ADD CONSTRAINT fkvfv2 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- Name: vfvassoc fkvfv3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.vfvassoc
    ADD CONSTRAINT fkvfv3 FOREIGN KEY (environid, viewfolderid) REFERENCES :schemaV.viewfolder(environid, viewfolderid);


--
-- Name: view fkviewt1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.view
    ADD CONSTRAINT fkviewt1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: view fkviewt2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.view
    ADD CONSTRAINT fkviewt2 FOREIGN KEY (environid, controlrecid) REFERENCES :schemaV.controlrec(environid, controlrecid);


--
-- Name: view fkviewt3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.view
    ADD CONSTRAINT fkviewt3 FOREIGN KEY (environid, lfpfassocid) REFERENCES :schemaV.lfpfassoc(environid, lfpfassocid);


--
-- Name: view fkviewt4; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.view
    ADD CONSTRAINT fkviewt4 FOREIGN KEY (environid, outputlrid) REFERENCES :schemaV.logrec(environid, logrecid);


--
-- Name: view fkviewt5; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.view
    ADD CONSTRAINT fkviewt5 FOREIGN KEY (environid, writeexitid) REFERENCES :schemaV.exit(environid, exitid);


--
-- Name: view fkviewt6; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.view
    ADD CONSTRAINT fkviewt6 FOREIGN KEY (environid, formatexitid) REFERENCES :schemaV.exit(environid, exitid);


--
-- Name: viewlogicdepend fkvlogi1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewlogicdepend
    ADD CONSTRAINT fkvlogi1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: viewlogicdepend fkvlogi2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewlogicdepend
    ADD CONSTRAINT fkvlogi2 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- Name: viewlogicdepend fkvlogi3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewlogicdepend
    ADD CONSTRAINT fkvlogi3 FOREIGN KEY (environid, lookupid) REFERENCES :schemaV.lookup(environid, lookupid);


--
-- Name: viewlogicdepend fkvlogi4; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewlogicdepend
    ADD CONSTRAINT fkvlogi4 FOREIGN KEY (environid, lrfieldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);


--
-- Name: viewlogicdepend fkvlogi5; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewlogicdepend
    ADD CONSTRAINT fkvlogi5 FOREIGN KEY (environid, exitid) REFERENCES :schemaV.exit(environid, exitid);


--
-- Name: viewlogicdepend fkvlogi6; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewlogicdepend
    ADD CONSTRAINT fkvlogi6 FOREIGN KEY (environid, lfpfassocid) REFERENCES :schemaV.lfpfassoc(environid, lfpfassocid);


--
-- Name: viewcolumnsource fkvlrfl1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: viewcolumnsource fkvlrfl2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl2 FOREIGN KEY (environid, viewcolumnid) REFERENCES :schemaV.viewcolumn(environid, viewcolumnid);


--
-- Name: viewcolumnsource fkvlrfl3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl3 FOREIGN KEY (environid, viewsourceid) REFERENCES :schemaV.viewsource(environid, viewsourceid);


--
-- Name: viewcolumnsource fkvlrfl4; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl4 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- Name: viewcolumnsource fkvlrfl5; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl5 FOREIGN KEY (environid, lrfieldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);


--
-- Name: viewcolumnsource fkvlrfl6; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl6 FOREIGN KEY (environid, lookupid) REFERENCES :schemaV.lookup(environid, lookupid);


--
-- Name: viewcolumnsource fkvlrfl7; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl7 FOREIGN KEY (environid, sorttitlelookupid) REFERENCES :schemaV.lookup(environid, lookupid);


--
-- Name: viewcolumnsource fkvlrfl8; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumnsource
    ADD CONSTRAINT fkvlrfl8 FOREIGN KEY (environid, effdatelrfieldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);



--
-- Name: viewsortkey fkvsort1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsortkey
    ADD CONSTRAINT fkvsort1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: viewsortkey fkvsort2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsortkey
    ADD CONSTRAINT fkvsort2 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- Name: viewsortkey fkvsort3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsortkey
    ADD CONSTRAINT fkvsort3 FOREIGN KEY (environid, viewcolumnid) REFERENCES :schemaV.viewcolumn(environid, viewcolumnid);


--
-- Name: viewsource fkvsrcl1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsource
    ADD CONSTRAINT fkvsrcl1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: viewsource fkvsrcl2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsource
    ADD CONSTRAINT fkvsrcl2 FOREIGN KEY (environid, inlrlfassocid) REFERENCES :schemaV.lrlfassoc(environid, lrlfassocid);


--
-- Name: viewsource fkvsrcl3; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsource
    ADD CONSTRAINT fkvsrcl3 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- Name: viewsource fkvsrcl4; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsource
    ADD CONSTRAINT fkvsrcl4 FOREIGN KEY (environid, outlfpfassocid) REFERENCES :schemaV.lfpfassoc(environid, lfpfassocid);


--
-- Name: viewsource fkvsrcl5; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewsource
    ADD CONSTRAINT fkvsrcl5 FOREIGN KEY (environid, writeexitid) REFERENCES :schemaV.exit(environid, exitid);


--
-- Name: lrfieldattr fkxovlr1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrfieldattr
    ADD CONSTRAINT fkxovlr1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: lrfieldattr fkxovlr2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.lrfieldattr
    ADD CONSTRAINT fkxovlr2 FOREIGN KEY (environid, lrfieldid) REFERENCES :schemaV.lrfield(environid, lrfieldid);


--
-- Name: viewcolumn fkxovvw1; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumn
    ADD CONSTRAINT fkxovvw1 FOREIGN KEY (environid) REFERENCES :schemaV.environ(environid);


--
-- Name: viewcolumn fkxovvw2; Type: FK CONSTRAINT; Schema: :schemaV; Owner: postgres
--

ALTER TABLE ONLY :schemaV.viewcolumn
    ADD CONSTRAINT fkxovvw2 FOREIGN KEY (environid, viewid) REFERENCES :schemaV.view(environid, viewid);


--
-- PostgreSQL database dump complete
--

